-- 1. List all customers who live in Texas (use JOINs). Answer: 5 customers live in Texas
SELECT customer_id, first_name, last_name
FROM customer
JOIN address
ON customer.address_id = address.address_id
WHERE district = 'Texas'
ORDER BY last_name ASC;

-- 2. Get all payments above $6.99 with the Customer's Full Name. Answer: 1,406 payments. I didn't know if this was interpreted
-- as return the customer's full name or make sure each payment has a customer's full name.
SELECT first_name, last_name, payment.amount
FROM customer
JOIN payment
ON customer.customer_id = payment.customer_id
WHERE amount > 6.99 AND first_name IS NOT NULL AND last_name IS NOT NULL;

-- 3. Show all customers names who have made payments over $175(use subqueries). Answer: 6 people
SELECT first_name, last_name
FROM customer
WHERE customer_id IN(
	SELECT customer_id
	FROM payment
	GROUP BY customer_id
	HAVING SUM(amount) > 175
	ORDER BY SUM(amount) DESC
);

-- 4. List all customers that live in Nepal (use the city table). Answer: Only Kevin Schuler lives in Nepal. It is a very non-Nepalese name.
SELECT customer_id, first_name, last_name
FROM customer
JOIN address
ON customer.address_id = address.address_id
JOIN city
ON address.city_id = city.city_id
JOIN country
ON country.country_id = city.country_id
WHERE country = 'Nepal';

-- 5. Which staff member had the most transactions? Answer: Staff #1 had 7,304 and Staff #2 had 7,292
SELECT first_name, last_name, COUNT(payment.staff_id)
FROM staff
JOIN payment
ON staff.staff_id = payment.staff_id
GROUP BY staff.staff_id
ORDER BY COUNT(payment.staff_id) DESC;

-- 6. How many movies of each rating are there? Answer: 223 for PG-13, 210 for NC-17 (that's a large back room),
-- 195 for R, 194 for PG and 178 for G
SELECT rating, COUNT(rating)
FROM film
GROUP BY rating
ORDER BY COUNT(rating) DESC;

-- 7.Show all customers who have made a single payment above $6.99 (Use Subqueries). Answer: 130 people had only 1 transaction
-- over 6.99
SELECT first_name, last_name
FROM customer
JOIN payment
ON customer.customer_id = payment.customer_id
WHERE amount > 6.99
GROUP BY customer.customer_id
HAVING COUNT(payment.customer_id) = 1;

-- 8. How many free rentals did our stores give away? Answer: I think the real answer is that there are 24 payments of 0.00 (the second query)
-- but the first query returns 1,452 rentals that don't show up in the payment table.
SELECT rental.rental_id
FROM rental
LEFT JOIN payment
ON rental.rental_id = payment.rental_id
WHERE payment.rental_id IS NULL
GROUP BY rental.rental_id;

SELECT COUNT(amount)
FROM payment
WHERE amount = 0.00
GROUP BY amount;